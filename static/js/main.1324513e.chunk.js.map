{"version":3,"sources":["components/Jock/Jock.tsx","components/Loader/Loader.tsx","api/api.ts","components/Categories/CategoriesSlice.ts","components/Categories/Categories.tsx","components/Header/Header.tsx","components/RandomJock/RandomJockSlice.ts","assets/images/imgbin_chuck-norris-karate-kommandos-png.png","components/RandomJock/RandomJock.tsx","components/Search/SearchSlice.ts","components/Search/Search.tsx","App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["Jock","text","className","Loader","color","cn","getRandomJock","category","axios","get","params","getSearchingJocks","query","fetchCategories","createAsyncThunk","_","a","signal","rejectWithValue","source","CancelToken","addEventListener","cancel","response","data","error","status","fetchJocksByCategory","initialState","categories","categoriesLoading","categoriesRequestId","undefined","jock","created_at","icon_url","id","updated_at","url","value","jockLoading","jockRequestId","SortSlice","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","action","meta","requestId","fulfilled","payload","rejected","Categories","dispatch","useDispatch","useSelector","useState","selectedCategory","setSelectedCategory","useEffect","length","activeCategory","map","index","onClick","handleSelectCategory","Header","to","fetchRandomJock","timestamp","message","violations","loading","RandomJockSlice","RandomJock","randomJock","src","chuckNorrisImage","alt","fetchSearchingJocks","jocks","SearchSlice","result","Search","search","inputValue","setInputValue","debounceInputValue","useCallback","debounce","htmlFor","type","onChange","target","slice","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","categoriesReducer","randomJockReducer","searchReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1324513e.chunk.js","sourcesContent":["import './Jock.scss';\n\ntype JockProps = {\n  text?: string;\n};\n\nexport const Jock = ({ text }: JockProps): JSX.Element => (\n  <>{text && <div className='jock'>{text}</div>}</>\n);\n","import cn from 'classnames';\n\nimport './Loader.scss';\n\ntype LoaderProps = {\n  color?: 'green';\n};\n\nexport const Loader = ({ color }: LoaderProps) => {\n  return (\n    <div\n      className={cn('loader', {\n        'loader--green': color === 'green',\n      })}></div>\n  );\n};\n","import axios from 'axios';\n\nexport const getRandomJock = (category?: string) =>\n  axios.get('https://api.chucknorris.io/jokes/random', { params: { category } });\n\nexport const getSearchingJocks = (query: string) =>\n  axios.get(`https://api.chucknorris.io/jokes/search`, { params: { query } });\n\nexport const getCategories = () => axios.get('https://api.chucknorris.io/jokes/categories');\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios, { AxiosError } from 'axios';\n\nimport { getCategories, getRandomJock } from '../../api/api';\n\nimport { ErrorInterface, JockInterface, Loading } from '../../types/types';\n\nexport const fetchCategories = createAsyncThunk(\n  'categories/fetchCategories',\n  async (_: void, { signal, rejectWithValue }) => {\n    const source = axios.CancelToken.source();\n    signal.addEventListener('abort', () => {\n      source.cancel();\n    });\n    try {\n      const response = await getCategories();\n\n      return response.data;\n    } catch (err: any) {\n      let error: AxiosError<ErrorInterface> = err\n\n      if (!error.response) {\n        throw err\n      }\n\n      return rejectWithValue(error.response.status);\n    }\n  },\n);\n\nexport const fetchJocksByCategory = createAsyncThunk(\n  'categories/fetchJocksByCategory',\n  async (category: string, { signal, rejectWithValue }) => {\n    const source = axios.CancelToken.source();\n    signal.addEventListener('abort', () => {\n      source.cancel();\n    });\n    try {\n      const response = await getRandomJock(category);\n\n      return response.data;\n    } catch (err: any) {\n      let error: AxiosError<ErrorInterface> = err\n\n      if (!error.response) {\n        throw err\n      }\n\n      return rejectWithValue(error.response.status);\n    }\n  },\n);\n\ninterface InitialStateInterface {\n  categories: Array<string>,\n  categoriesLoading: Loading,\n  categoriesRequestId?: string,\n  jock: JockInterface,\n  jockLoading: Loading,\n  jockRequestId?: string\n}\n\nexport const initialState: InitialStateInterface = {\n  categories: [],\n  categoriesLoading: \"idle\",\n  categoriesRequestId: undefined,\n  jock: {\n    categories: [],\n    created_at: \"\",\n    icon_url: \"\",\n    id: \"\",\n    updated_at: \"\",\n    url: \"\",\n    value: \"\",\n  },\n  jockLoading: \"idle\",\n  jockRequestId: undefined\n};\n\nexport const SortSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, (state, action) => {\n      state.categoriesLoading = \"pending\";\n      state.categoriesRequestId = action.meta.requestId;\n    })\n    builder.addCase(fetchCategories.fulfilled, (state, action) => {\n      const { payload, meta } = action;\n      const { requestId } = meta;\n\n      if (state.categoriesLoading === 'pending' && state.categoriesRequestId === requestId) {\n        state.categories = payload;\n        state.categoriesLoading = \"idle\";\n        state.categoriesRequestId = undefined;\n      }\n    })\n    builder.addCase(fetchCategories.rejected, (state, action: any) => {\n      const { meta } = action;\n      const { requestId } = meta;\n\n      if (state.categoriesLoading === 'pending' && state.categoriesRequestId === requestId) {\n        state.categoriesLoading = \"idle\";\n        state.categoriesRequestId = undefined;\n      }\n    })\n    builder.addCase(fetchJocksByCategory.pending, (state, action) => {\n      state.jockLoading = \"pending\";\n      state.jockRequestId = action.meta.requestId;\n    })\n    builder.addCase(fetchJocksByCategory.fulfilled, (state, action) => {\n      const { payload, meta } = action;\n      const { requestId } = meta;\n\n      if (state.jockLoading === 'pending' && state.jockRequestId === requestId) {\n        state.jock = payload\n        state.jockLoading = \"idle\"\n        state.jockRequestId = undefined\n      }\n    })\n    builder.addCase(fetchJocksByCategory.rejected, (state, action) => {\n      const { meta } = action;\n      const { requestId } = meta;\n\n      if (state.jockLoading === 'pending' && state.jockRequestId === requestId) {\n        state.jockLoading = \"idle\";\n        state.jockRequestId = undefined;\n      }\n    })\n  }\n})\n\nexport default SortSlice.reducer;","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Jock } from '../Jock';\nimport { Loader } from '../Loader';\n\nimport './Categories.scss';\n\nimport { fetchCategories, fetchJocksByCategory } from './CategoriesSlice';\n\nimport { RootState } from '../../app/store';\n\nexport const Categories = () => {\n  const dispatch = useDispatch();\n  const { categories, categoriesLoading, jock, jockLoading } = useSelector(\n    (state: RootState) => state.categories,\n  );\n  const [selectedCategory, setSelectedCategory] = useState(0);\n\n  const handleSelectCategory = (index: number) => {\n    const activeCategory = categories[index];\n\n    setSelectedCategory(index);\n    dispatch(fetchJocksByCategory(activeCategory));\n  };\n\n  // fetch categories\n  useEffect(() => {\n    dispatch(fetchCategories());\n  }, []);\n\n  // fetch a jock when open a paage\n  useEffect(() => {\n    if (categories.length > 0) {\n      const activeCategory = categories[selectedCategory];\n      dispatch(fetchJocksByCategory(activeCategory));\n    }\n  }, [categories]);\n\n  return (\n    <div className='categories'>\n      <div className='categories__categories'>\n        {categoriesLoading === 'pending' && <Loader />}\n\n        {categories.map((category: string, index: number) => (\n          <button\n            key={category}\n            className={cn('categories__category', {\n              'categories__category--selected': index === selectedCategory,\n            })}\n            onClick={() => handleSelectCategory(index)}>\n            {category}\n\n            {index === selectedCategory && jockLoading === 'pending' && <Loader />}\n          </button>\n        ))}\n      </div>\n\n      <div className='categories__jock-list'>{jock.value && <Jock text={jock.value} />}</div>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nimport './Header.scss';\n\nexport const Header = () => {\n  return (\n    <div className='header'>\n      <Link to='/' className='header_title'>\n        Chuck Norris\n      </Link>\n\n      <div className='header__options'>\n        <Link className='header__option' to='serch'>\n          Search\n        </Link>\n        <Link className='header__option' to='categories'>\n          categories\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios, { AxiosError } from 'axios';\n\nimport { getRandomJock } from '../../api/api';\n\nimport { ErrorInterface, JockInterface, Loading } from '../../types/types';\n\nexport const fetchRandomJock = createAsyncThunk(\n  'randomJock/fetchRandomJock',\n  async (_: void, { signal, rejectWithValue }) => {\n    const source = axios.CancelToken.source();\n    signal.addEventListener('abort', () => {\n      source.cancel();\n    });\n    try {\n      const response = await getRandomJock();\n      return response.data;\n    } catch (err: any) {\n      let error: AxiosError<ErrorInterface> = err\n\n      if (!error.response) {\n        throw err\n      }\n\n      return rejectWithValue(error.response.status);\n    }\n  },\n);\n\ninterface InitialStateInterface {\n  error: ErrorInterface,\n  jock: JockInterface,\n  loading: Loading,\n  requestId?: string\n}\n\nexport const initialState: InitialStateInterface = {\n  error: {\n    timestamp: \"\",\n    status: 200,\n    error: \"\",\n    message: \"\",\n    violations: {\n      \"search.query\": \"\"\n    }\n  },\n  jock: {\n    categories: [],\n    created_at: \"\",\n    icon_url: \"\",\n    id: \"\",\n    updated_at: \"\",\n    url: \"\",\n    value: \"\",\n  },\n  loading: \"idle\",\n  requestId: undefined\n}\n\nexport const RandomJockSlice = createSlice({\n  name: 'randomJock',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchRandomJock.pending, (state, action) => {\n      state.loading = \"pending\";\n      state.requestId = action.meta.requestId;\n    })\n    builder.addCase(fetchRandomJock.fulfilled, (state, action) => {\n      const { payload, meta } = action;\n      const { requestId } = meta;\n\n      if (state.loading === 'pending' && state.requestId === requestId) {\n        state.error.status = 200;\n        state.jock = payload;\n        state.loading = \"idle\";\n        state.requestId = undefined;\n      }\n    })\n    builder.addCase(fetchRandomJock.rejected, (state, action: any) => {\n      const { meta, payload } = action;\n      const { requestId } = meta;\n\n      if (state.loading === 'pending' && state.requestId === requestId) {\n        state.loading = \"idle\";\n        state.error = payload;\n        state.requestId = undefined;\n      }\n    })\n  }\n})\n\nexport default RandomJockSlice.reducer;","export default __webpack_public_path__ + \"static/media/imgbin_chuck-norris-karate-kommandos-png.0b704c9a.png\";","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Jock } from '../Jock';\nimport { Loader } from '../Loader';\n\nimport './RandomJock.scss';\n\nimport { fetchRandomJock } from './RandomJockSlice';\n\nimport { RootState } from '../../app/store';\n\nimport chuckNorrisImage from '../../assets/images/imgbin_chuck-norris-karate-kommandos-png.png';\n\nexport const RandomJock = () => {\n  const dispatch = useDispatch();\n  const { jock, loading, error } = useSelector((state: RootState) => state.randomJock);\n\n  useEffect(() => {\n    dispatch(fetchRandomJock());\n  }, [dispatch]);\n\n  return (\n    <div className='random-jock'>\n      <img src={chuckNorrisImage} alt='Chuck Norris' />\n      <div className='random-jock__action'>\n        <Jock text={jock.value} />\n        <button className='random-jock__button' onClick={() => dispatch(fetchRandomJock())}>\n          Chuck Go!\n          {loading === 'pending' && <Loader />}\n        </button>\n\n        {error.status !== 200 && (\n          <p className='random-jock__error-message'>{error.violations['search.query']}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios, { AxiosError } from 'axios';\n\nimport { getSearchingJocks } from '../../api/api';\n\nimport { ErrorInterface, JockInterface, Loading } from '../../types/types';\n\n\nexport const fetchSearchingJocks = createAsyncThunk(\n  'search/fetchSearchingJocks',\n  async (query: string, { signal, rejectWithValue }) => {\n    const source = axios.CancelToken.source();\n    signal.addEventListener('abort', () => {\n      source.cancel();\n    });\n    try {\n      const response = await getSearchingJocks(query);\n\n      return response.data;\n    } catch (err: any) {\n      let error: AxiosError<ErrorInterface> = err\n\n      if (!error.response) {\n        throw err\n      }\n\n      return rejectWithValue(error.response.data);\n    }\n  },\n);\n\n\ninterface InitialStateInterface {\n  jocks: Array<JockInterface>,\n  loading: Loading,\n  requestId?: string\n  error: ErrorInterface,\n}\n\nexport const initialState: InitialStateInterface = {\n  jocks: [],\n  loading: \"idle\",\n  requestId: undefined,\n  error: {\n    timestamp: \"\",\n    status: 200,\n    error: \"\",\n    message: \"\",\n    violations: {\n      \"search.query\": \"\"\n    }\n  },\n}\n\nexport const SearchSlice = createSlice({\n  name: 'search',\n  initialState,\n  reducers: {\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchSearchingJocks.pending, (state, action) => {\n      state.loading = \"pending\";\n      state.requestId = action.meta.requestId;\n    })\n    builder.addCase(fetchSearchingJocks.fulfilled, (state, action) => {\n      const { payload, meta } = action;\n      const { requestId } = meta;\n\n      if (state.loading === 'pending' && state.requestId === requestId) {\n        state.jocks = payload.result;\n        state.error.status = 200;\n        state.loading = \"idle\";\n        state.requestId = undefined;\n      }\n    })\n    builder.addCase(fetchSearchingJocks.rejected, (state, action: any) => {\n      const { meta, payload } = action;\n      const { requestId } = meta;\n\n      if (state.loading === 'pending' && state.requestId === requestId) {\n        state.jocks = [];\n        state.error = payload;\n        state.loading = \"idle\";\n        state.requestId = undefined;\n      }\n    })\n\n  }\n})\n\nexport default SearchSlice.reducer;","import { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport debounce from 'lodash.debounce';\n\nimport { Jock } from '../Jock';\nimport { Loader } from '../Loader';\n\nimport './Search.scss';\n\nimport { RootState } from '../../app/store';\n\nimport { fetchSearchingJocks } from './SearchSlice';\n\nexport const Search = () => {\n  const dispatch = useDispatch();\n  const { jocks, loading, error } = useSelector((state: RootState) => state.search);\n  const [inputValue, setInputValue] = useState<string>('');\n\n  const debounceInputValue = useCallback(\n    debounce((query: string) => dispatch(fetchSearchingJocks(query)), 400),\n    [],\n  );\n\n  const handleSearchJocks = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(target.value);\n    debounceInputValue(target.value);\n  };\n\n  return (\n    <div className='search'>\n      <div className='search_field'>\n        <label className='search__label' htmlFor='findJock'>\n          Find jocks:\n          <input\n            className='search__input'\n            type='text'\n            name='findJock'\n            value={inputValue}\n            onChange={handleSearchJocks}\n          />\n        </label>\n\n        {loading === 'pending' && <Loader color='green' />}\n\n        {error.status !== 200 && (\n          <p className='search__error-message'>{error.violations['search.query']}</p>\n        )}\n      </div>\n\n      <div className='search__suggestions'>\n        {jocks.slice(0, 5).map(({ id, value }: any) => (\n          <Jock key={id} text={value} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { Routes, Route } from 'react-router-dom';\n\nimport { Categories } from './components/Categories';\nimport { Header } from './components/Header';\nimport { RandomJock } from './components/RandomJock';\nimport { Search } from './components/Search';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <div className='container'>\n        <Routes>\n          <Route path='/' element={<RandomJock />} />\n          <Route path='/categories' element={<Categories />} />\n          <Route path='/serch' element={<Search />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport categoriesReducer from '../components/Categories/CategoriesSlice';\nimport randomJockReducer from '../components/RandomJock/RandomJockSlice';\nimport searchReducer from '../components/Search/SearchSlice';\n\nconst store = configureStore({\n  reducer: {\n    categories: categoriesReducer,\n    randomJock: randomJockReducer,\n    search: searchReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}